name: Run Unit Test via Pytest
on: push

jobs:
  build:
    env:
      ENV_TEST: ${{secrets.ENV_TEST}}
      ENV_TEST_2: "Fred is my cat"
      DATABASE_URI: ${{secrets.DATABASE_URI}}
      USER_ADM: ${{secrets.USER_ADM}}
      USER_ADM_PASSWORD: ${{secrets.USER_ADM_PASSWORD}}

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
  
    steps:
      - name: Print env_test 1
        run: echo "1-> ${{env.ENV_TEST}}"

      - name: Print env_test 2
        run: echo "2-> $ENV_TEST_2"

      - name: Print env_test 3
        run: echo "3-> ${{secrets.ENV_TEST}}"

      - name: Print env_test 4
        run: echo "4-> ${{ vars.ENV_TEST }}"

      - name: Print env_test 5
        run: echo "5-> ${{vars.ENV_TEST}}"

      - name: Print env_test 6
        run: echo "6-> $ENV_TEST"

      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --format=github --target-version=py310 .
        continue-on-error: true
      - name: Test with pytest
        run: |
          coverage run -m pytest -v -s --cov-config=.coveragerc
      - name: Generate Coverage Report
        run: |
          coverage report -m
